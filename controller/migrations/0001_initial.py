# Generated by Django 4.0.1 on 2022-01-07 22:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True)),
                ('gamepass', models.CharField(default='Lh4AThjF', max_length=10)),
                ('gameip', models.CharField(default='239.234.197.31', max_length=20, unique=True)),
                ('premium', models.BooleanField(default=False)),
                ('stats_game', models.BooleanField(default=False)),
                ('net', models.IntegerField(default=1)),
                ('money', models.IntegerField(default=10000)),
                ('isnpc', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeSofts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CacheUser',
            fields=[
                ('userid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('reputation', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HistUsersCurrent',
            fields=[
                ('userid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('reputation', models.BigIntegerField(default=0)),
                ('age', models.IntegerField(default=0)),
                ('clanid', models.IntegerField(default=0)),
                ('clanname', models.CharField(default='ok', max_length=50)),
                ('timeplaying', models.FloatField(default=0)),
                ('missioncount', models.IntegerField(default=0)),
                ('hackcount', models.IntegerField(default=0)),
                ('ddoscount', models.IntegerField(default=0)),
                ('ipresets', models.IntegerField(default=0)),
                ('moneyearned', models.BigIntegerField(default=0)),
                ('moneytransfered', models.BigIntegerField(default=0)),
                ('moneyhardware', models.BigIntegerField(default=0)),
                ('moneyresearch', models.BigIntegerField(default=0)),
                ('warezsent', models.PositiveIntegerField(default=0)),
                ('spamsent', models.PositiveIntegerField(default=0)),
                ('bitcoinsent', models.FloatField(default=0)),
                ('profileviews', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('userid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('text', models.TextField(default='operating system created at 2022-01-07 22:38:36.533888+00:00')),
            ],
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('datejoined', models.DateTimeField(db_column='dateJoined', default=django.utils.timezone.now)),
                ('exp', models.IntegerField(default=0)),
                ('certifications', models.CharField(default='ok', max_length=30)),
                ('awards', models.CharField(default=0, max_length=50)),
                ('timeplaying', models.FloatField(db_column='timePlaying', default=0)),
                ('missioncount', models.IntegerField(db_column='missionCount', default=0)),
                ('hackcount', models.IntegerField(db_column='hackCount', default=0)),
                ('ddoscount', models.IntegerField(db_column='ddosCount', default=0)),
                ('warezsent', models.FloatField(db_column='warezSent', default=0)),
                ('spamsent', models.BigIntegerField(db_column='spamSent', default=0)),
                ('bitcoinsent', models.FloatField(db_column='bitcoinSent', default=0)),
                ('ipresets', models.IntegerField(db_column='ipResets', default=0)),
                ('lastipreset', models.DateTimeField(db_column='lastIpReset', default=django.utils.timezone.now)),
                ('pwdresets', models.IntegerField(db_column='pwdResets', default=0)),
                ('lastpwdreset', models.DateTimeField(db_column='lastPwdReset', default=django.utils.timezone.now)),
                ('moneyearned', models.BigIntegerField(db_column='moneyEarned', default=0)),
                ('moneytransfered', models.BigIntegerField(db_column='moneyTransfered', default=0)),
                ('moneyhardware', models.BigIntegerField(db_column='moneyHardware', default=0)),
                ('moneyresearch', models.BigIntegerField(db_column='moneyResearch', default=0)),
                ('profileviews', models.IntegerField(db_column='profileViews', default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('softname', models.CharField(max_length=25)),
                ('softversion', models.IntegerField()),
                ('softsize', models.IntegerField()),
                ('softram', models.IntegerField()),
                ('softhidden', models.BooleanField()),
                ('softhiddenwith', models.BigIntegerField(default=0)),
                ('softtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='controller.typesofts')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('serverid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='SERVER', max_length=15)),
                ('cpu', models.FloatField(default=500)),
                ('hdd', models.FloatField(default=100)),
                ('ram', models.FloatField(default=256)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
